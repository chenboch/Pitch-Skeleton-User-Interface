# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'camera_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_camera_ui(object):
    def setupUi(self, camera_ui):
        camera_ui.setObjectName("camera_ui")
        camera_ui.resize(1200, 800)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(camera_ui)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.image_resolution_label = QtWidgets.QLabel(camera_ui)
        self.image_resolution_label.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.image_resolution_label.setFont(font)
        self.image_resolution_label.setObjectName("image_resolution_label")
        self.verticalLayout_2.addWidget(self.image_resolution_label)
        self.camer_frame_view = QtWidgets.QGraphicsView(camera_ui)
        self.camer_frame_view.setMinimumSize(QtCore.QSize(480, 360))
        self.camer_frame_view.setObjectName("camer_frame_view")
        self.verticalLayout_2.addWidget(self.camer_frame_view)
        self.horizontalLayout_2.addLayout(self.verticalLayout_2)
        self.setting_groupbox = QtWidgets.QGroupBox(camera_ui)
        self.setting_groupbox.setMinimumSize(QtCore.QSize(450, 625))
        self.setting_groupbox.setMaximumSize(QtCore.QSize(450, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.setting_groupbox.setFont(font)
        self.setting_groupbox.setObjectName("setting_groupbox")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.setting_groupbox)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.camera_setting_groupbox = QtWidgets.QGroupBox(self.setting_groupbox)
        self.camera_setting_groupbox.setObjectName("camera_setting_groupbox")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.camera_setting_groupbox)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.fps_label = QtWidgets.QLabel(self.camera_setting_groupbox)
        self.fps_label.setObjectName("fps_label")
        self.verticalLayout_4.addWidget(self.fps_label)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.camera_id_label = QtWidgets.QLabel(self.camera_setting_groupbox)
        self.camera_id_label.setObjectName("camera_id_label")
        self.horizontalLayout.addWidget(self.camera_id_label)
        self.camera_id_input = QtWidgets.QSpinBox(self.camera_setting_groupbox)
        self.camera_id_input.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.camera_id_input.setObjectName("camera_id_input")
        self.horizontalLayout.addWidget(self.camera_id_input)
        self.verticalLayout_4.addLayout(self.horizontalLayout)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.open_camera_btn = QtWidgets.QPushButton(self.camera_setting_groupbox)
        self.open_camera_btn.setMinimumSize(QtCore.QSize(150, 40))
        self.open_camera_btn.setObjectName("open_camera_btn")
        self.gridLayout.addWidget(self.open_camera_btn, 0, 0, 1, 1)
        self.start_code_btn = QtWidgets.QPushButton(self.camera_setting_groupbox)
        self.start_code_btn.setMinimumSize(QtCore.QSize(0, 40))
        self.start_code_btn.setObjectName("start_code_btn")
        self.gridLayout.addWidget(self.start_code_btn, 0, 1, 1, 1)
        self.verticalLayout_4.addLayout(self.gridLayout)
        self.verticalLayout_10.addLayout(self.verticalLayout_4)
        self.verticalLayout_7.addWidget(self.camera_setting_groupbox)
        self.kpt_adjust_groupbox = QtWidgets.QGroupBox(self.setting_groupbox)
        self.kpt_adjust_groupbox.setObjectName("kpt_adjust_groupbox")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.kpt_adjust_groupbox)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.show_skeleton_checkBox = QtWidgets.QCheckBox(self.kpt_adjust_groupbox)
        self.show_skeleton_checkBox.setChecked(True)
        self.show_skeleton_checkBox.setObjectName("show_skeleton_checkBox")
        self.horizontalLayout_5.addWidget(self.show_skeleton_checkBox)
        self.show_bbox_checkbox = QtWidgets.QCheckBox(self.kpt_adjust_groupbox)
        self.show_bbox_checkbox.setCheckable(True)
        self.show_bbox_checkbox.setChecked(False)
        self.show_bbox_checkbox.setObjectName("show_bbox_checkbox")
        self.horizontalLayout_5.addWidget(self.show_bbox_checkbox)
        self.show_line_checkBox = QtWidgets.QCheckBox(self.kpt_adjust_groupbox)
        self.show_line_checkBox.setObjectName("show_line_checkBox")
        self.horizontalLayout_5.addWidget(self.show_line_checkBox)
        self.verticalLayout_6.addLayout(self.horizontalLayout_5)
        self.keypoint_table = QtWidgets.QTableWidget(self.kpt_adjust_groupbox)
        self.keypoint_table.setMinimumSize(QtCore.QSize(400, 0))
        self.keypoint_table.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.keypoint_table.setObjectName("keypoint_table")
        self.keypoint_table.setColumnCount(4)
        self.keypoint_table.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.keypoint_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.keypoint_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.keypoint_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.keypoint_table.setHorizontalHeaderItem(3, item)
        self.verticalLayout_6.addWidget(self.keypoint_table)
        self.verticalLayout_7.addWidget(self.kpt_adjust_groupbox)
        self.horizontalLayout_2.addWidget(self.setting_groupbox)

        self.retranslateUi(camera_ui)
        QtCore.QMetaObject.connectSlotsByName(camera_ui)

    def retranslateUi(self, camera_ui):
        _translate = QtCore.QCoreApplication.translate
        camera_ui.setWindowTitle(_translate("camera_ui", "Form"))
        self.image_resolution_label.setText(_translate("camera_ui", "(0, 0) - "))
        self.setting_groupbox.setTitle(_translate("camera_ui", "2D 關節點"))
        self.camera_setting_groupbox.setTitle(_translate("camera_ui", "相機設定"))
        self.fps_label.setText(_translate("camera_ui", "FPS:"))
        self.camera_id_label.setText(_translate("camera_ui", "相機ID:"))
        self.open_camera_btn.setText(_translate("camera_ui", "開啟相機"))
        self.start_code_btn.setText(_translate("camera_ui", "開始分析"))
        self.kpt_adjust_groupbox.setTitle(_translate("camera_ui", "手動關節點修正"))
        self.show_skeleton_checkBox.setText(_translate("camera_ui", "Show Skeleton"))
        self.show_bbox_checkbox.setText(_translate("camera_ui", "Show BBox"))
        self.show_line_checkBox.setText(_translate("camera_ui", "Show Line"))
        item = self.keypoint_table.horizontalHeaderItem(0)
        item.setText(_translate("camera_ui", "Keypoint"))
        item = self.keypoint_table.horizontalHeaderItem(1)
        item.setText(_translate("camera_ui", "X"))
        item = self.keypoint_table.horizontalHeaderItem(2)
        item.setText(_translate("camera_ui", "Y"))
        item = self.keypoint_table.horizontalHeaderItem(3)
        item.setText(_translate("camera_ui", "有無更改"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    camera_ui = QtWidgets.QWidget()
    ui = Ui_camera_ui()
    ui.setupUi(camera_ui)
    camera_ui.show()
    sys.exit(app.exec_())
